Each video has been created by running cellevolution from cellevolution.py and then by using the function make_video with the obvious inputs. After importing the py file with

  >>> import cellevolution as ce
  
these are the commands that generate the videos:

- life_rand3_500.mp4

  >>> [p, f] = ce.cellevolution(ce.pop_rand([100, 100], 1, 3), 1, 't', [False, 0, 0], 500, 500, \
                                ce.fit_life, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 3], 1, \
                                ce.co_life, 10, 0.01, 3, 'nipy_spectral')
  >>> ce.make_video(p, f, 1, 1, 'nipy_spectral', '../video/life_rand3_500.mp4')
  
- life3_gun_300.mp4

  >>> [p, f] = ce.cellevolution(ce.life3_glidergun(50, 50), 2, 'c', [False, 0, 0], 300, 300, \
                                ce.fit_life3, [], 2, \
                                ce.co_life, 0, 0, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 2, 2, 'nipy_spectral', '../video/life3_gun_300.mp4')
  
- life4_gen_500.mp4

  >>> [p, f] = ce.cellevolution(ce.life4_generator(100, 100), 3, 'c', [False, 0, 0], 500, 500, \
                                ce.fit_life4, [], 1, \
                                ce.co_life4, 0, 0, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 3, 1, 'nipy_spectral', '../video/life3_gun_300.mp4')
  
- pd_1,4_1000.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 1000, 1000, \
                                ce.fit_prisoner, [1, 0, 1.4, 0], 22, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_1,4_1000.mp4')
                   
- pd_1,6_1000.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 1000, 1000, \
                                ce.fit_prisoner, [1, 0, 1.6, 0], 22, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_1,6_1000.mp4')
  
- pd_1,65_1000.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 1000, 1000, \
                                ce.fit_prisoner, [1, 0, 1.65, 0], 22, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_1,65_1000.mp4')
  
- pd_1,7_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 1.7, 0], 22, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_1,7_100.mp4')
  
- pd_1,75_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 1.75, 0], 22, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_1,75_100.mp4')
  
- pd_1,8_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 1.8, 0], 22, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_1,8_100.mp4')
  
- pd_2_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 2, 0], 22, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_2_100.mp4')
  
- pd_2,5_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 2.5, 0], 22, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_2,5_100.mp4')
  
- pd_2,7_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 2.7, 0], 22, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_2,7_100.mp4')
  
- pdceil_1,6_1000.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 1000, 1000, \
                                ce.fit_prisoner, [1, 0, 1.6, 0], 22, \
                                ce.co_fitceil, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_1.6_1000.mp4')
  
- pdceil_1,8_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 1.8, 0], 22, \
                                ce.co_fitceil, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_1.8_100.mp4')
  
- pdceil_2_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 2, 0], 22, \
                                ce.co_fitceil, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_2_100.mp4')
  
- pdceil_2,5_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 2.5, 0], 22, \
                                ce.co_fitceil, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_2,5_100.mp4')
  
- pdceil_2,7_100.mp4

  >>> [p, f] = ce.cellevolution(ce.pd_1square(100, 100), 1, 't', [False, 0, 0], 100, 100, \
                                ce.fit_prisoner, [1, 0, 2.7, 0], 22, \
                                ce.co_fitceil, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 1, 22, 'nipy_spectral', '../video/pd_2,7_100.mp4')
  
- rps_rand3_1000.mp4

  >>> [p, f] = ce.cellevolution(ce.pop_rand([100, 100], 2, 3), 2, 't', [False, 0, 0], 1000, 1000, \
                                ce.fit_rps, [1, 1, 1], 8, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 2, 8, 'nipy_spectral', '../video/rps_rand3_1000.mp4')
  
- rps_glider4_101.mp4

  >>> [p, f] = ce.cellevolution(ce.rps_glider1(50,50), 2, 't', [False, 0, 0], 101, 101, \
                                ce.fit_rps, [1, 1.1, 1.2],10, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral") 
  >>> ce.make_video(p, f, 2, 10, 'nipy_spectral', '../video/rps_glider4_101.mp4')    
  
- rps_pseudoglider_100.mp4

  >>> [p, f] = ce.cellevolution(ce.rps_glider1(50,50), 2, 't', [False, 0, 0], 100, 100, \
                                ce.fit_rps, [1, 1.5, 2], 16, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral") 
  >>> ce.make_video(p, f, 2, 16, 'nipy_spectral', '../video/rps_pseudoglider_100.mp4') 
  
- rps_glider1_100.mp4

  >>> [p, f] = ce.cellevolution(ce.rps_glider1(49,49), 2, 't', [False, 0, 0], 100, 100, \
                                ce.fit_rps, [1, 2, 3], 24, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral") 
  >>> ce.make_video(p, f, 2, 24, 'nipy_spectral', '../video/rps_glider1_100.mp4')
  
- rps_gen_100.mp4

  >>> [p, f] = ce.cellevolution(ce.rps_generator(200, 200), 2, 't', [False, 0, 0], 100, 100, \
                                ce.fit_rps, [1.7, 3, 5], 40, \
                                ce.co_selected, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 2, 40, 'nipy_spectral', '../video/rps_gen_100.mp4')

- rpsround_gen_100.mp4

  >>> [p, f] = ce.cellevolution(ce.rps_midglider1(200, 200), 2, 't', [False, 0, 0], 100, 100, \
                                ce.fit_rps, [1, 1.1, 1.2], 10, \
                                ce.co_fitequable, 0, 0.01, 3, "nipy_spectral")
  >>> ce.make_video(p, f, 2, 10, 'nipy_spectral', '../video/rpsround_gen_100.mp4')

